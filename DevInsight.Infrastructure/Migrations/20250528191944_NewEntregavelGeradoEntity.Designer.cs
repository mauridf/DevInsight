// <auto-generated />
using System;
using DevInsight.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DevInsight.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250528191944_NewEntregavelGeradoEntity")]
    partial class NewEntregavelGeradoEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DevInsight.Core.Entities.DocumentoLink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CriadoEm")
                        .HasPrecision(6)
                        .HasColumnType("timestamp(6) with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ProjetoConsultoriaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjetoId")
                        .HasColumnType("uuid");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoConsultoriaId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("DocumentosLinks");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.EntregaFinal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CriadoEm")
                        .HasPrecision(6)
                        .HasColumnType("timestamp(6) with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ProjetoConsultoriaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjetoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UrlEntrega")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoConsultoriaId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("EntregasFinais");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.EntregavelGerado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte[]>("Arquivo")
                        .HasColumnType("bytea");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CriadoEm")
                        .HasPrecision(6)
                        .HasColumnType("timestamp(6) with time zone");

                    b.Property<string>("Formato")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ProjetoConsultoriaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjetoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UrlDownload")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoConsultoriaId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("EntregaveisGerados");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.FuncionalidadeDesejada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CriadoEm")
                        .HasPrecision(6)
                        .HasColumnType("timestamp(6) with time zone");

                    b.Property<string>("Funcionalidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ProjetoConsultoriaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjetoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoConsultoriaId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("FuncionalidadesDesejadas");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.ProjetoConsultoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("CriadoEm")
                        .HasPrecision(6)
                        .HasColumnType("timestamp(6) with time zone");

                    b.Property<Guid>("CriadoPorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("date");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CriadoPorId");

                    b.ToTable("ProjetosConsultoria");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.Requisito", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CriadoEm")
                        .HasPrecision(6)
                        .HasColumnType("timestamp(6) with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<Guid?>("ProjetoConsultoriaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjetoId")
                        .HasColumnType("uuid");

                    b.Property<string>("TipoRequisito")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoConsultoriaId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Requisitos");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.Reuniao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CriadoEm")
                        .HasPrecision(6)
                        .HasColumnType("timestamp(6) with time zone");

                    b.Property<DateTime>("DataHora")
                        .HasPrecision(6)
                        .HasColumnType("timestamp(6) with time zone");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<Guid?>("ProjetoConsultoriaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjetoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoConsultoriaId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Reunioes");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.SolucaoProposta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Arquitetura")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ComponentesSistema")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CriadoEm")
                        .HasPrecision(6)
                        .HasColumnType("timestamp(6) with time zone");

                    b.Property<string>("PontosIntegracao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ProjetoConsultoriaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjetoId")
                        .HasColumnType("uuid");

                    b.Property<string>("RecomendacoesTecnicas")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Resumo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Riscos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoConsultoriaId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("SolucoesPropostas");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.StakeHolder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CriadoEm")
                        .HasPrecision(6)
                        .HasColumnType("timestamp(6) with time zone");

                    b.Property<string>("Funcao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ProjetoConsultoriaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjetoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoConsultoriaId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("StakeHolders");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.TarefaProjeto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CriadoEm")
                        .HasPrecision(6)
                        .HasColumnType("timestamp(6) with time zone");

                    b.Property<DateTime>("DataEntrega")
                        .HasPrecision(6)
                        .HasColumnType("timestamp(6) with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ProjetoConsultoriaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjetoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoConsultoriaId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("TarefasProjeto");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CriadoEm")
                        .HasPrecision(6)
                        .HasColumnType("timestamp(6) with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("EmailConfirmado")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.ValidacaoTecnica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CriadoEm")
                        .HasPrecision(6)
                        .HasColumnType("timestamp(6) with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ProjetoConsultoriaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjetoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Validado")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoConsultoriaId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("ValidacoesTecnicas");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.DocumentoLink", b =>
                {
                    b.HasOne("DevInsight.Core.Entities.ProjetoConsultoria", null)
                        .WithMany("Documentos")
                        .HasForeignKey("ProjetoConsultoriaId");

                    b.HasOne("DevInsight.Core.Entities.ProjetoConsultoria", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.EntregaFinal", b =>
                {
                    b.HasOne("DevInsight.Core.Entities.ProjetoConsultoria", null)
                        .WithMany("Entregas")
                        .HasForeignKey("ProjetoConsultoriaId");

                    b.HasOne("DevInsight.Core.Entities.ProjetoConsultoria", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.EntregavelGerado", b =>
                {
                    b.HasOne("DevInsight.Core.Entities.ProjetoConsultoria", null)
                        .WithMany("Entregaveis")
                        .HasForeignKey("ProjetoConsultoriaId");

                    b.HasOne("DevInsight.Core.Entities.ProjetoConsultoria", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.FuncionalidadeDesejada", b =>
                {
                    b.HasOne("DevInsight.Core.Entities.ProjetoConsultoria", null)
                        .WithMany("Funcionalidades")
                        .HasForeignKey("ProjetoConsultoriaId");

                    b.HasOne("DevInsight.Core.Entities.ProjetoConsultoria", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.ProjetoConsultoria", b =>
                {
                    b.HasOne("DevInsight.Core.Entities.Usuario", "CriadoPor")
                        .WithMany("ProjetosCriados")
                        .HasForeignKey("CriadoPorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CriadoPor");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.Requisito", b =>
                {
                    b.HasOne("DevInsight.Core.Entities.ProjetoConsultoria", null)
                        .WithMany("Requisitos")
                        .HasForeignKey("ProjetoConsultoriaId");

                    b.HasOne("DevInsight.Core.Entities.ProjetoConsultoria", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.Reuniao", b =>
                {
                    b.HasOne("DevInsight.Core.Entities.ProjetoConsultoria", null)
                        .WithMany("Reunioes")
                        .HasForeignKey("ProjetoConsultoriaId");

                    b.HasOne("DevInsight.Core.Entities.ProjetoConsultoria", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.SolucaoProposta", b =>
                {
                    b.HasOne("DevInsight.Core.Entities.ProjetoConsultoria", null)
                        .WithMany("Solucoes")
                        .HasForeignKey("ProjetoConsultoriaId");

                    b.HasOne("DevInsight.Core.Entities.ProjetoConsultoria", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.StakeHolder", b =>
                {
                    b.HasOne("DevInsight.Core.Entities.ProjetoConsultoria", null)
                        .WithMany("StakeHolders")
                        .HasForeignKey("ProjetoConsultoriaId");

                    b.HasOne("DevInsight.Core.Entities.ProjetoConsultoria", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.TarefaProjeto", b =>
                {
                    b.HasOne("DevInsight.Core.Entities.ProjetoConsultoria", null)
                        .WithMany("Tarefas")
                        .HasForeignKey("ProjetoConsultoriaId");

                    b.HasOne("DevInsight.Core.Entities.ProjetoConsultoria", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.ValidacaoTecnica", b =>
                {
                    b.HasOne("DevInsight.Core.Entities.ProjetoConsultoria", null)
                        .WithMany("ValidacoesTecnicas")
                        .HasForeignKey("ProjetoConsultoriaId");

                    b.HasOne("DevInsight.Core.Entities.ProjetoConsultoria", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.ProjetoConsultoria", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Entregas");

                    b.Navigation("Entregaveis");

                    b.Navigation("Funcionalidades");

                    b.Navigation("Requisitos");

                    b.Navigation("Reunioes");

                    b.Navigation("Solucoes");

                    b.Navigation("StakeHolders");

                    b.Navigation("Tarefas");

                    b.Navigation("ValidacoesTecnicas");
                });

            modelBuilder.Entity("DevInsight.Core.Entities.Usuario", b =>
                {
                    b.Navigation("ProjetosCriados");
                });
#pragma warning restore 612, 618
        }
    }
}
